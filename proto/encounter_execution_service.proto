syntax = "proto3";

option go_package = "proto/encounter-execution";

import "google/protobuf/timestamp.proto";

// Definicija servisa EncounterExecutionService
service EncounterExecutionService {
    rpc ActivateEncounterRPC(ActivateRequest) returns (EncounterExecutionDtoResponse) {}
    rpc AbandonEncounterRPC(AbandonRequest) returns (EncounterExecutionDtoResponse) {}
    rpc CheckIfCompletedEncounterRPC(CheckIfCompletedRequest) returns (EncounterExecutionDtoResponse) {}
    rpc CompleteMiscEncounterEncounterRPC(CompleteMiscEncounterRequest) returns (EncounterExecutionDtoResponse) {}
}


// Definicija DTO-a CoordinateDto
message CoordinateDto {
    double latitude = 1;
    double longitude = 2;
}

// Definicija enumeracije EncounterExecutionStatus
enum EncounterExecutionStatus {
    EXECUTION_ACTIVE = 0;
    EXECUTION_COMPLETED = 1;
    EXECUTION_ABANDONED = 2;
  }

// Definicija DTO-a EncounterExecutionDto
message EncounterExecutionDtoResponse {
    string id = 1;
    string encounter_id = 2;
    int64 tourist_id = 3;
    EncounterExecutionStatus status = 4;
    google.protobuf.Timestamp last_activity = 5;
    google.protobuf.Timestamp location_entry_timestamp = 6;
    CoordinateDto last_position = 7;
}

// Poruke zahteva i odgovora za svaku metodu

message ActivateRequest {
    string encounter_id = 1;
    int64 tourist_id = 2;
    CoordinateDto current_position = 3;
}

message AbandonRequest {
    string execution_id = 1;
    int64 tourist_id = 2;
}

message CheckIfCompletedRequest {
    string execution_id = 1;
    int64 tourist_id = 2;
    CoordinateDto current_position = 3;
}

message CompleteMiscEncounterRequest {
    string execution_id = 1;
    int64 tourist_id = 2;
}
